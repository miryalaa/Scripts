<#
Script Name : VMwareTools_1305_Cleanup.ps1
Purpose     : Verify VMware Tools version 13.0.5 installed. 
              If not, reboot. If yes, clean registry entries below 13.0.5, verify installed version, and reboot.
Author      : Anup's Assistant (GPT-5)
Requires    : Run as Administrator
#>

# ============================================================
# Step 1: Check VMware Tools Installed Version
# ============================================================

Write-Host "Checking installed VMware Tools version..." -ForegroundColor Cyan

$vmwareTools = Get-ItemProperty `
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*" `
    -ErrorAction SilentlyContinue | 
    Where-Object { $_.DisplayName -eq "VMware Tools" }

function Compare-Version ($v1, $v2) {
    [version]$ver1 = $v1
    [version]$ver2 = $v2
    return $ver1.CompareTo($ver2)
}

$targetVersion = "13.0.5"

if (-not $vmwareTools) {
    Write-Host "‚ùå VMware Tools not found. System reboot required." -ForegroundColor Red
    shutdown /r /t 60 /c "VMware Tools not detected. System will reboot in 60 seconds."
    Write-Host "You can cancel reboot using: shutdown /a"
    exit
}

$installedVersion = $vmwareTools.DisplayVersion
Write-Host "üü° VMware Tools detected - Installed Version: $installedVersion"

$versionCheck = Compare-Version $installedVersion $targetVersion

if ($versionCheck -ne 0) {
    Write-Host "‚ö†Ô∏è VMware Tools $targetVersion not installed. Current version is $installedVersion." -ForegroundColor Yellow
    Write-Host "Rebooting system for compliance..." -ForegroundColor Cyan
    shutdown /r /t 60 /c "VMware Tools 13.0.5 not installed. System will reboot in 60 seconds."
    Write-Host "You can cancel reboot using: shutdown /a"
    exit
}

Write-Host "‚úÖ VMware Tools $targetVersion is installed. Proceeding with registry cleanup of older entries.`n"

# ============================================================
# Step 2: Backup Registry
# ============================================================

$regPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall"
$backupDir = "C:\OS"
$backupFile = Join-Path $backupDir "Uninstall_Backup.reg"

if (-not (Test-Path -Path $backupDir)) {
    New-Item -Path $backupDir -ItemType Directory -Force | Out-Null
}

Write-Host "Backing up registry path to $backupFile..." -ForegroundColor Cyan
& reg export "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall" "$backupFile" /y

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Registry backup completed successfully.`n"
} else {
    Write-Host "‚ùå Registry export failed. Aborting cleanup for safety."
    exit
}

# ============================================================
# Step 3: Identify Old VMware Tools Registry Entries
# ============================================================

Write-Host "Scanning for VMware Tools entries below version $targetVersion..." -ForegroundColor Cyan

$subKeys = Get-ChildItem -Path $regPath -ErrorAction SilentlyContinue
$oldKeys = @()

foreach ($key in $subKeys) {
    try {
        $props = Get-ItemProperty -Path $key.PSPath -ErrorAction Stop
        if ($props.DisplayName -eq "VMware Tools" -and $props.DisplayVersion) {
            $compare = Compare-Version $props.DisplayVersion $targetVersion
            if ($compare -lt 0) {
                Write-Host "üü† Found older VMware Tools entry:"
                Write-Host " - Path: $($key.PSPath)"
                Write-Host " - Version: $($props.DisplayVersion)"
                Write-Host "--------------------------------------------"
                $oldKeys += $key.PSPath
            }
        }
    } catch {}
}

if ($oldKeys.Count -eq 0) {
    Write-Host "‚úÖ No older VMware Tools registry entries found.`n"
} else {
    Write-Host "`nDeleting registry entries below version $targetVersion..." -ForegroundColor Yellow
    foreach ($path in $oldKeys) {
        try {
            Remove-Item -Path $path -Recurse -Force -ErrorAction Stop
            Write-Host "üóëÔ∏è Deleted: $path"
        } catch {
            Write-Host "‚ùå Failed to delete: $path - $($_.Exception.Message)"
        }
    }
}

# ============================================================
# Step 4: Verification - Check Installed VMware Tools Version
# ============================================================

Write-Host "`nVerifying VMware Tools installation version..." -ForegroundColor Cyan

# Check again via registry
$vmwareCheck = Get-ItemProperty `
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*" `
    -ErrorAction SilentlyContinue | 
    Where-Object { $_.DisplayName -eq "VMware Tools" }

if ($vmwareCheck) {
    $currentVersion = $vmwareCheck.DisplayVersion
    $compareResult = Compare-Version $currentVersion $targetVersion

    if ($compareResult -eq 0) {
        Write-Host "‚úÖ Verification Passed: VMware Tools $currentVersion is correctly installed." -ForegroundColor Green
    } elseif ($compareResult -lt 0) {
        Write-Host "‚ö†Ô∏è Verification Warning: VMware Tools version is older ($currentVersion). Consider upgrade to $targetVersion." -ForegroundColor Yellow
    } else {
        Write-Host "‚ÑπÔ∏è VMware Tools version $currentVersion detected (newer than $targetVersion)." -ForegroundColor Cyan
    }
} else {
    Write-Host "‚ùå VMware Tools not found after cleanup. Possible uninstall or corruption." -ForegroundColor Red
    Write-Host "Restoring registry backup..." -ForegroundColor Yellow
    & reg import "$backupFile"
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Registry backup restored successfully." -ForegroundColor Green
    } else {
        Write-Host "‚ùå Registry restore failed. Please check manually." -ForegroundColor Red
    }
}

# ============================================================
# Step 5: Reboot
# ============================================================

Write-Host "`n‚öôÔ∏è Cleanup complete. System will reboot in 60 seconds..." -ForegroundColor Cyan
shutdown /r /t 60 /c "VMware Tools cleanup and verification completed successfully. System rebooting in 60 seconds."
Write-Host "You can cancel reboot using: shutdown /a" -ForegroundColor Yellow
