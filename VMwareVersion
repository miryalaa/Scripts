<#
Script Name : VMwareTools_Cleanup.ps1
Purpose     : Uninstall VMware Tools, backup registry, clean old entries, verify, restore if needed, and reboot
Author      : Anup's Assistant (GPT-5)
Requires    : Run as Administrator
#>

# ============================================================
# Step 0: Check and Uninstall VMware Tools (any version)
# ============================================================

Write-Host "Checking if VMware Tools is installed..." -ForegroundColor Cyan

# Detect VMware Tools via WMI
$vmwareApp = Get-WmiObject -Class Win32_Product -Filter "Name='VMware Tools'" -ErrorAction SilentlyContinue

if ($vmwareApp) {
    Write-Host "üü° VMware Tools detected. Version: $($vmwareApp.Version)"
    Write-Host "Attempting to uninstall VMware Tools..."

    try {
        $result = $vmwareApp.Uninstall()
        if ($result.ReturnValue -eq 0) {
            Write-Host "‚úÖ VMware Tools uninstalled successfully.`n"
        } else {
            Write-Host "‚ö†Ô∏è VMware Tools uninstall returned code: $($result.ReturnValue)"
        }
    } catch {
        Write-Host "‚ùå Error during VMware Tools uninstall: $($_.Exception.Message)"
    }
} else {
    Write-Host "‚úÖ VMware Tools not found ‚Äî continuing to registry backup.`n"
}

# ============================================================
# Step 1: Backup Registry
# ============================================================

$regPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall"
$backupDir = "C:\OS"
$backupFile = Join-Path $backupDir "Uninstall_Backup.reg"

if (-not (Test-Path -Path $backupDir)) {
    New-Item -Path $backupDir -ItemType Directory -Force | Out-Null
}

Write-Host "Backing up registry path to $backupFile..." -ForegroundColor Cyan
& reg export "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall" "$backupFile" /y

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Registry backup completed successfully.`n"
} else {
    Write-Host "‚ùå Registry export failed. Aborting for safety."
    exit
}

# ============================================================
# Step 2: Find VMware Tools Entries Below Version 13.x
# ============================================================

Write-Host "Scanning for VMware Tools entries below version 13.x...`n" -ForegroundColor Cyan

$subKeys = Get-ChildItem -Path $regPath -ErrorAction SilentlyContinue
$foundKeys = @()

foreach ($key in $subKeys) {
    try {
        $props = Get-ItemProperty -Path $key.PSPath -ErrorAction Stop
        $displayName = $props.DisplayName
        $displayVersion = $props.DisplayVersion

        if ($displayName -eq "VMware Tools" -and $displayVersion) {
            $majorVersion = [int]($displayVersion.Split('.')[0])
            if ($majorVersion -lt 13) {
                Write-Host "üü° Found: $($key.PSPath)"
                Write-Host "DisplayVersion: $displayVersion"
                Write-Host "--------------------------------------------"
                $foundKeys += $key.PSPath
            }
        }
    } catch {}
}

if ($foundKeys.Count -eq 0) {
    Write-Host "‚úÖ No VMware Tools entries below version 13.x found.`n"
} else {
    # ============================================================
    # Step 3: Confirm and Delete Old VMware Tools Entries
    # ============================================================

    Write-Host "`nThe following registry subkeys will be deleted:" -ForegroundColor Yellow
    $foundKeys | ForEach-Object { Write-Host " - $_" }

    $confirmation = Read-Host "`nDo you want to proceed with deletion? (Y/N)"
    if ($confirmation -match '^[Yy]$') {
        foreach ($path in $foundKeys) {
            try {
                Remove-Item -Path $path -Recurse -Force -ErrorAction Stop
                Write-Host "üóëÔ∏è Deleted: $path"
            } catch {
                Write-Host "‚ùå Failed to delete: $path - $($_.Exception.Message)"
            }
        }
        Write-Host "`n‚úÖ Deletion process completed."
    } else {
        Write-Host "`nOperation cancelled. No registry entries were deleted."
    }
}

# ============================================================
# Step 4: Verification - Ensure VMware Tools Fully Removed
# ============================================================

Write-Host "`nVerifying VMware Tools cleanup..." -ForegroundColor Cyan

# Re-check via WMI
$vmwareAppCheck = Get-WmiObject -Class Win32_Product -Filter "Name='VMware Tools'" -ErrorAction SilentlyContinue

# Re-check registry in both 64-bit and 32-bit locations
$regPathsToCheck = @(
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall",
    "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall"
)

$vmwareRegistryKeys = @()
foreach ($rPath in $regPathsToCheck) {
    $subKeys = Get-ChildItem -Path $rPath -ErrorAction SilentlyContinue
    foreach ($key in $subKeys) {
        try {
            $props = Get-ItemProperty -Path $key.PSPath -ErrorAction Stop
            if ($props.DisplayName -eq "VMware Tools") {
                $vmwareRegistryKeys += $key.PSPath
            }
        } catch {}
    }
}

# ============================================================
# Step 5: Handle Verification Results
# ============================================================

if (-not $vmwareAppCheck -and $vmwareRegistryKeys.Count -eq 0) {
    Write-Host "‚úÖ Verification passed: No VMware Tools installations or registry traces found.`n" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è Verification failed: VMware Tools traces still found. Restoring registry backup..." -ForegroundColor Yellow
    
    try {
        & reg import "$backupFile"
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Registry backup restored successfully." -ForegroundColor Green
        } else {
            Write-Host "‚ùå Registry restore failed. Please check manually." -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå Error restoring registry: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# ============================================================
# Step 6: Reboot the Server
# ============================================================

Write-Host "`n‚öôÔ∏è Preparing to reboot the server in 60 seconds..." -ForegroundColor Cyan
shutdown /r /t 60 /c "VMware Tools cleanup completed. System will reboot in 60 seconds."

Write-Host "You can cancel the reboot using: shutdown /a" -ForegroundColor Yellow

